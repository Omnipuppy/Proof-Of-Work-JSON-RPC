import React, { useState } from 'react';
import { jsonRpc } from 'jsonrpc-lite';

function App() {
  const [data, setData] = useState('');
  const [difficulty, setDifficulty] = useState(0);
  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);

  const handleSubmit = async (e) => {
    e.preventDefault();

    const payload = { data, difficulty };
    const requestOptions = {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(jsonRpc.request(1, 'proof-of-work', payload)),
    };

    try {
      const response = await fetch('http://localhost:3000', requestOptions);
      const responseJson = await response.json();
      const parsedResponse = jsonRpc.parseObject(responseJson);

      if (parsedResponse.type === 'success') {
        setResult(parsedResponse.payload.result);
        setError(null);
      } else {
        setResult(null);
        setError(parsedResponse.payload);
      }
    } catch (err) {
      console.error(err);
      setResult(null);
      setError({ message: 'Failed to connect to server' });
    }
  };

  return (
    <div>
      <form onSubmit={handleSubmit}>
        <div>
          <label htmlFor="data">Data:</label>
          <input
            type="text"
            id="data"
            value={data}
            onChange={(e) => setData(e.target.value)}
          />
        </div>
        <div>
          <label htmlFor="difficulty">Difficulty:</label>
          <input
            type="number"
            id="difficulty"
            value={difficulty}
            onChange={(e) => setDifficulty(parseInt(e.target.value))}
          />
        </div>
        <button type="submit">Submit</button>
      </form>
      {result && (
        <div>
          <p>Nonce: {result.nonce}</p>
          <p>Hash: {result.hash}</p>
        </div>
      )}
      {error && <p>Error: {error.message}</p>}
    </div>
  );
}

export default App;
